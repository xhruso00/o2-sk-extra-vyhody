//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class APMDatabase, APMPBMeasurementConfig, GULMutableDictionary, NSArray, NSDictionary, NSMutableSet, NSNumberFormatter, NSString;

@interface APMRemoteConfig : NSObject
{
    BOOL _isDefaultInstance;
    NSString *_appID;
    APMDatabase *_database;
    GULMutableDictionary *_cachedValueByRemoteConfigKeys;
    GULMutableDictionary *_cachedEventConfigByEventName;
    NSMutableSet *_cachedExperimentIDs;
    NSDictionary *_experimentIDMap;
    NSNumberFormatter *_numberFormatter;
    APMPBMeasurementConfig *_remoteConfigProto;
}

+ (id)defaultInstance;
- (void).cxx_destruct;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2;
- (long long)int64ValueFromCacheWithKey:(id)arg1 defaultValue:(long long)arg2 maxValue:(long long)arg3 minValue:(long long)arg4;
- (int)intValueFromCacheWithKey:(id)arg1 defaultValue:(int)arg2 maxValue:(int)arg3 minValue:(int)arg4;
- (double)timeIntervalInSecondsFromCacheWithKey:(id)arg1 defaultValue:(double)arg2 maxValue:(double)arg3 minValue:(double)arg4;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4 block:(CDUnknownBlockType)arg5;
- (id)numberFromCacheWithKey:(id)arg1 defaultValue:(id)arg2 maxValue:(id)arg3 minValue:(id)arg4;
- (id)cacheValue:(id)arg1 forKey:(id)arg2;
- (id)numberFromString:(id)arg1;
- (id)measurementConfigFromDatabase;
- (void)parseRemoteConfigFromMeasurementConfig:(id)arg1;
@property(readonly, nonatomic, getter=isScreenViewReporterDelegateEnabled) BOOL screenViewReporterDelegateEnabled;
@property(readonly, nonatomic, getter=isResetAnalyticsDataEnabled) BOOL resetAnalyticsDataEnabled;
@property(readonly, nonatomic) double remoteConfigCacheTimeInterval;
@property(readonly, nonatomic) BOOL checksumEnabled;
@property(readonly, nonatomic) int analyticsAccountTimeZoneOffsetMinutes;
@property(readonly, nonatomic, getter=isTimeZoneOffsetEnabled) BOOL timeZoneOffsetEnabled;
@property(readonly, nonatomic, getter=isEventSamplingEnabled) BOOL eventSamplingEnabled;
@property(readonly, nonatomic) BOOL blacklistPublic;
@property(readonly, nonatomic) BOOL blacklistInternal;
@property(readonly, nonatomic) double uploadingRealTimeInterval;
@property(readonly, nonatomic) double uploadingDebugModeInterval;
@property(readonly, nonatomic) int maxRealtimeEventCountPerDay;
@property(readonly, nonatomic) int maxBundlesCreatedPerIteration;
@property(readonly, nonatomic) double uploadingRetryInterval;
@property(readonly, nonatomic) int uploadingRetryCount;
@property(readonly, nonatomic) long long uploadMaxSizeLimitBytes;
@property(readonly, nonatomic) long long uploadMaxEventsPerBundle;
@property(readonly, nonatomic) long long uploadMaxBundlesLimit;
@property(readonly, nonatomic) double uploadingInitialDelayInterval;
@property(readonly, nonatomic) double uploadingInterval;
@property(readonly, nonatomic) int maxEventsStored;
@property(readonly, nonatomic) int maxTrackedCurrencies;
@property(readonly, nonatomic) int maxErrorEventsPerDay;
@property(readonly, nonatomic) int maxPublicEventsPerDay;
@property(readonly, nonatomic) int maxEventsPerDay;
@property(readonly, nonatomic) int maxConversionsPerDay;
@property(readonly, nonatomic) BOOL dedupePurchasesEnabled;
@property(readonly, nonatomic) BOOL parsePurchaseDataEnabled;
@property(readonly, nonatomic) BOOL uploadWhenAppInBackgroundEnabled;
@property(readonly, nonatomic) BOOL redundantEngagementRemovalEnabled;
@property(readonly, nonatomic) BOOL efficientEngagementReportingEnabled;
@property(readonly, nonatomic) BOOL sessionNumberEnabled;
@property(readonly, nonatomic) BOOL sessionBackgroundEnabled;
@property(readonly, nonatomic) BOOL sessionImmediateStartEnabled;
@property(readonly, nonatomic) BOOL sessionIDEnabled;
@property(readonly, nonatomic) double sessionEventUserEngagementInterval;
@property(readonly, nonatomic) double sessionDefaultTimeoutInterval;
@property(readonly, nonatomic) double sessionDefaultMinimumInterval;
@property(readonly, nonatomic) double networkTimeout;
@property(readonly, nonatomic, getter=isNetworkBackgroundSessionEnabled) BOOL networkBackgroundSessionEnabled;
@property(readonly, nonatomic) double monitoringSamplePeriod;
@property(readonly, nonatomic, getter=isIAPIntroductoryOfferEnabled) BOOL IAPIntroductoryOfferEnabled;
@property(readonly, nonatomic, getter=isIAPSubscriptionNonConsumableReportEnabled) BOOL IAPSubscriptionNonConsumableReportEnabled;
@property(readonly, nonatomic, getter=isIdentifierForVendorCollectionEnabled) BOOL identifierForVendorCollectionEnabled;
@property(readonly, nonatomic) double adIDCacheTime;
@property(readonly, nonatomic) NSArray *experimentIDs;
@property(readonly, nonatomic) double maxQueueTime;
@property(readonly, nonatomic) double databaseDeleteStaleBundlesInterval;
@property(readonly, nonatomic, getter=isAudienceScopedFiltersEnabled) BOOL audienceScopedFiltersEnabled;
@property(readonly, nonatomic, getter=isAudienceSequenceFiltersEnabled) BOOL audienceSequenceFiltersEnabled;
@property(readonly, nonatomic, getter=isAudienceDynamicFiltersEnabled) BOOL audienceDynamicFiltersEnabled;
@property(readonly, nonatomic) int maxParametersPerFilter;
@property(readonly, nonatomic) int maxFilterResultCount;
@property(readonly, nonatomic) int maxFiltersPerAudience;
@property(readonly, nonatomic) int maxAudienceCount;
@property(readonly, nonatomic, getter=isSearchAdReporterEnabled) BOOL searchAdReporterEnabled;
@property(readonly, nonatomic) double uploadingBackoffInterval;
- (id)remoteConfigURLWithAppInstanceID:(id)arg1 platform:(id)arg2 SDKVersion:(long long)arg3;
@property(readonly, nonatomic) double lastRemoteConfigUpdateTimestamp;
@property(readonly, nonatomic) long long version;
@property(readonly, nonatomic, getter=isExpired) BOOL expired;
- (int)samplingRateForEvent:(id)arg1;
- (BOOL)eventHasSamplingRate:(id)arg1;
- (BOOL)isEventCustomConversion:(id)arg1;
- (BOOL)isEventBlacklisted:(id)arg1;
- (id)eventConfigWithName:(id)arg1;
- (BOOL)updateMeasurementConfig:(id)arg1;
- (void)reset;
- (id)initWithAppID:(id)arg1 database:(id)arg2 measurementConfig:(id)arg3;
- (id)initWithAppID:(id)arg1 database:(id)arg2;

@end

