//
//     Generated by class-dump 3.5 (64 bit).
//
//     class-dump is Copyright (C) 1997-1998, 2000-2001, 2004-2013 by Steve Nygard.
//

#import "NSObject.h"

@class APMASLLogger, APMMonitoringSampledData, APMUserDefaults, NSObject<OS_dispatch_queue>, NSString;

@interface APMMonitor : NSObject
{
    int _logLevel;
    APMASLLogger *_logger;
    APMMonitoringSampledData *_monitoringSampledData;
    NSObject<OS_dispatch_queue> *_monitorQueue;
    long long _libraryVersion;
    APMUserDefaults *_monitorUserDefaults;
    BOOL _debugModeEnabled;
    BOOL _encodeContexts;
    NSString *_logTag;
}

+ (id)monitoringDataKeyWithMessage:(id)arg1 logLevel:(int)arg2 libraryVersion:(long long)arg3;
+ (id)lastAPMSymbolFromException:(id)arg1;
+ (id)encodedStringWithContextObject:(id)arg1;
+ (id)stringWithLogMessage:(id)arg1 logLevel:(int)arg2 contexts:(id)arg3 encodeContexts:(BOOL)arg4;
+ (id)encodedStringWithContextArray:(id)arg1 insertSpaces:(BOOL)arg2;
+ (BOOL)isMonitorableLevel:(int)arg1;
+ (BOOL)isSilentLevel:(int)arg1;
+ (id)logLevelDescriptionFromLogLevel:(int)arg1;
@property(retain, nonatomic) NSString *logTag; // @synthesize logTag=_logTag;
@property(nonatomic) BOOL encodeContexts; // @synthesize encodeContexts=_encodeContexts;
@property(nonatomic, getter=isDebugModeEnabled) BOOL debugModeEnabled; // @synthesize debugModeEnabled=_debugModeEnabled;
- (void).cxx_destruct;
- (void)synchronizeToDiskOnMonitorQueue;
- (void)migrateMonitorDataOnMonitorQueue;
- (void)saveMonitoringDataToUserDefaultsOnMonitorQueue;
- (void)insertOrUpdateMonitoringDataWithMessage:(id)arg1 encodedContext:(id)arg2 logLevel:(int)arg3;
- (void)logToConsole:(int)arg1 message:(id)arg2 logLevel:(int)arg3;
- (BOOL)isLoggableLevel:(int)arg1;
- (void)loadMonitoringDataFromUserDefaultsOnMonitorQueue;
- (void)clearMonitoringData;
- (id)monitoringDataForDispatchWithSamplePeriod:(double)arg1 lastSampledTimestamp:(double)arg2;
- (void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 contexts:(id)arg4;
- (void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5 context:(id)arg6;
- (void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 context:(id)arg4 context:(id)arg5;
- (void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3 context:(id)arg4;
- (void)logWithLevel:(int)arg1 messageCode:(int)arg2 message:(id)arg3;
- (void)setLogLevel:(int)arg1;
- (id)initWithLogLevel:(int)arg1 logger:(id)arg2 libraryVersion:(long long)arg3;
- (id)initWithLibraryVersion:(long long)arg1;

@end

